{"ast":null,"code":"var _jsxFileName = \"/Users/risagarza/Desktop/dev/assignments/level-5-notes/server/client/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport Movie from \"./components/Movie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  //setup state \n  const [movies, setMovies] = useState([]);\n  //empty 2nd argument = runs once\n  useEffect(() => {\n    axios.get(\"/movies\")\n    // .then(res => console.log(res)) //test \n    .then(res => setMovies(res.data)).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n//npm install axios\n//import axios\n//setup state w/ empty arr\n//create use effect w/ empty dependencies arr so it only runs once\n//test get request w/ console.log\n//setMovies with data received \n_s(App, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Movie","jsxDEV","_jsxDEV","App","_s","movies","setMovies","get","then","res","data","catch","err","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/risagarza/Desktop/dev/assignments/level-5-notes/server/client/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios'\nimport Movie from \"./components/Movie\"\n\nexport default function App() {\n//setup state \nconst [movies, setMovies] = useState([])\n//empty 2nd argument = runs once\nuseEffect(()=> {\n    axios.get(\"/movies\")\n    // .then(res => console.log(res)) //test \n    .then(res => setMovies(res.data))\n    .catch(err => console.log(err))\n}, [])\n    return (\n        <div>\n\n        </div>\n    )\n}\n\n//npm install axios\n//import axios\n//setup state w/ empty arr\n//create use effect w/ empty dependencies arr so it only runs once\n//test get request w/ console.log\n//setMovies with data received \n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC9B;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC;EACAC,SAAS,CAAC,MAAK;IACXC,KAAK,CAACQ,GAAG,CAAC,SAAS;IACnB;IAAA,CACCC,IAAI,CAACC,GAAG,IAAIH,SAAS,CAACG,GAAG,CAACC,IAAI,CAAC,CAAC,CAChCC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EACF,oBACIV,OAAA;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEd;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAAd,EAAA,CAtBwBD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}